{"version":3,"sources":["flexbox/media-query/media-query-changes.ts"],"names":[],"mappings":"AAEA,mEAAmE;AACnE,gCAAgC;AAChC,mEAAmE;AAEnE;;;GAGG;AACH;IACE,2BAAmB,QAA0B,EAAS,OAAyB;QAA5D,aAAQ,GAAR,QAAQ,CAAkB;QAAS,YAAO,GAAP,OAAO,CAAkB;IAAG,CAAC;IACrF,wBAAC;AAAD,CAFA,AAEC,IAAA","file":"media-query-changes.js","sourcesContent":["import {MediaQueryChange} from '../../media-query/media-queries';\r\n\r\n// ****************************************************************\r\n// Exported Types and Interfaces\r\n// ****************************************************************\r\n\r\n/**\r\n * MQ Notification data emitted to external observers\r\n *\r\n */\r\nexport class MediaQueryChanges {\r\n  constructor(public previous: MediaQueryChange, public current: MediaQueryChange) {}\r\n}\r\n\r\n\r\n/**\r\n * @whatItDoes Lifecycle hook that is called when any mediaQuery breakpoint changes.\r\n * @howToUse\r\n *\r\n * @description\r\n * ``onMediaQueryChanges( )`` is called right after the a MediaQueryChange has occurred.\r\n */\r\nexport declare abstract class OnMediaQueryChanges {\r\n  abstract onMediaQueryChanges(changes: MediaQueryChanges): void;\r\n}\r\n\r\n\r\nexport type MediaQuerySubscriber = (e: MediaQueryChanges) => {};\r\n"]}