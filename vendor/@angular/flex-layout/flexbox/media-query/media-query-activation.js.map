{"version":3,"sources":["flexbox/media-query/media-query-activation.ts"],"names":[],"mappings":"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","file":"media-query-activation.js","sourcesContent":["import {Directive, OnDestroy} from '@angular/core';\r\n\r\nimport {BreakPoint} from '../../media-query/break-points';\r\nimport {MediaQueries} from '../../media-query/media-queries';\r\nimport {isDefined} from '../../utils/global';\r\n\r\nimport {MediaQueryChanges, OnMediaQueryChanges} from './media-query-changes';\r\n\r\nconst ON_DESTROY = 'ngOnDestroy';\r\nconst ON_MEDIA_CHANGES = 'onMediaQueryChanges';\r\n/**\r\n *\r\n */\r\nexport class MediaQueryActivation implements OnMediaQueryChanges, OnDestroy {\r\n  private _onDestroy: Function;\r\n  private _onMediaQueryChanges: Function;\r\n  private _activatedInputKey: string;\r\n\r\n  get activatedInputKey(): string {\r\n    let items: Array<BreakPoint> = this._mq.activeOverlaps;\r\n    items.forEach(bp => {\r\n      if (!isDefined(this._activatedInputKey)) {\r\n        let key = this._baseKey + bp.suffix;\r\n        if (isDefined(this._directive[key])) {\r\n          this._activatedInputKey = key;\r\n        }\r\n      }\r\n    });\r\n    return this._activatedInputKey || this._baseKey;\r\n  }\r\n\r\n  /**\r\n   * Get the currently activated @Input value or the fallback default @Input value\r\n   */\r\n  get activatedInput(): any {\r\n    return this._directive[this.activatedInputKey] || this._defaultValue;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n      private _mq: MediaQueries, private _directive: Directive, private _baseKey: string,\r\n      private _defaultValue: string|number) {\r\n    this._interceptLifeCyclEvents();\r\n  }\r\n\r\n  /**\r\n   * MediaQueryChanges interceptor that tracks the current mq-activated @Input and calculates the\r\n   * mq-activated input value or the default value\r\n   */\r\n  onMediaQueryChanges(changes: MediaQueryChanges) {\r\n    let currentKey = (this._baseKey + changes.current.suffix);\r\n\r\n    // !! change events may arrive out-of-order (activate before deactivate)\r\n    //    so make sure the deactivate is used ONLY when the keys match\r\n    //    (since a different activate may be in use)\r\n    this._activatedInputKey = changes.current.matches ?\r\n        currentKey :\r\n        (this._activatedInputKey !== currentKey) ? this._activatedInputKey : undefined;\r\n\r\n    let current = changes.current;\r\n    current.value = this.activatedInput;  // calculated value\r\n\r\n    changes = new MediaQueryChanges(changes.previous, current);\r\n\r\n    this._logMediaQueryChanges(changes);\r\n    this._onMediaQueryChanges(changes);\r\n  }\r\n\r\n  /**\r\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\r\n   */\r\n  ngOnDestroy() {\r\n    this._directive[ON_DESTROY] = this._onDestroy || this._directive[ON_DESTROY];\r\n    this._directive[ON_MEDIA_CHANGES] = this._onMediaQueryChanges;\r\n    try {\r\n      this._onDestroy();\r\n\r\n    } finally {\r\n      this._directive = undefined;\r\n      this._onDestroy = undefined;\r\n      this._onMediaQueryChanges = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Head-hook onDestroy and onMediaQueryChanges methods on the directive instance\r\n   */\r\n  private _interceptLifeCyclEvents() {\r\n    if (this._directive[ON_DESTROY]) {\r\n      this._onDestroy = this._directive[ON_DESTROY].bind(this._directive);\r\n      this._directive[ON_DESTROY] = this.ngOnDestroy.bind(this);\r\n    }\r\n\r\n    this._onMediaQueryChanges = this._directive[ON_MEDIA_CHANGES].bind(this._directive);\r\n    this._directive[ON_MEDIA_CHANGES] = this.onMediaQueryChanges.bind(this);\r\n  }\r\n\r\n  /**\r\n   */\r\n  private _logMediaQueryChanges(changes: MediaQueryChanges) {\r\n    let current = changes.current, previous = changes.previous;\r\n\r\n    if (current && current.mqAlias == '')\r\n      current.mqAlias = 'all';\r\n    if (previous && previous.mqAlias == '')\r\n      previous.mqAlias = 'all';\r\n\r\n    if (current.matches) {\r\n      console.log(`mqChange: ${this._baseKey}.${current.mqAlias} = ${changes.current.value};`);\r\n    }\r\n  }\r\n}\r\n"]}