{"version":3,"sources":["flexbox/api/abstract.ts"],"names":[],"mappings":"OAEO,EAAC,gBAAgB,EAAC,MAAM,2BAA2B;AAE1D;;GAEG;AACH;IACE,4BAAoB,MAAkB,EAAU,SAAmB;QAA/C,WAAM,GAAN,MAAM,CAAY;QAAU,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;IAEvE,gDAAgD;IAChD,oBAAoB;IACpB,gDAAgD;IAEhD;;OAEG;IACO,yCAAY,GAAtB,UAAuB,MAAqB,EAAE,KAAW;QACvD,IAAI,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QACnD,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YACvB,MAAM,GAAG,MAAM,CAAC;QAClB,CAAC;QAED,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAElC,mDAAmD;QACnD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAxBA,AAwBC,IAAA","file":"abstract.js","sourcesContent":["import {ElementRef, Renderer} from '@angular/core';\r\n\r\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\r\n\r\n/**\r\n * Abstract base class for the Layout API styling directives\r\n */\r\nexport abstract class BaseStyleDirective {\r\n  constructor(private _elRef: ElementRef, private _renderer: Renderer) {}\r\n\r\n  // *********************************************\r\n  // Protected methods\r\n  // *********************************************\r\n\r\n  /**\r\n   * Inject inline the flexbox styles specific to this renderer/domEl pair\r\n   */\r\n  protected _updateStyle(source: string|Object, value?: any) {\r\n    let styles = {}, domEl = this._elRef.nativeElement;\r\n    if (typeof source === 'string') {\r\n      styles[source] = value;\r\n      source = styles;\r\n    }\r\n\r\n    styles = applyCssPrefixes(source);\r\n\r\n    // Iterate all properties in hashMap and set styles\r\n    for (let key in styles) {\r\n      this._renderer.setElementStyle(domEl, key, styles[key]);\r\n    }\r\n  }\r\n}\r\n"]}