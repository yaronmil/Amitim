{"version":3,"sources":["flexbox/api/flex.ts"],"names":[],"mappings":"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","file":"flex.js","sourcesContent":["import {Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, Optional, Renderer, SimpleChanges, SkipSelf} from '@angular/core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nimport {isDefined} from '../../utils/global';\r\nimport {MediaQueryActivation} from '../media-query/media-query-activation';\r\nimport {MediaQueryAdapter} from '../media-query/media-query-adapter';\r\nimport {MediaQueryChanges, OnMediaQueryChanges} from '../media-query/media-query-changes';\r\n\r\nimport {BaseStyleDirective} from './abstract';\r\nimport {LayoutDirective, LayoutWrapDirective} from './layout';\r\n\r\n/**\r\n * FlexBox styling directive for 'fx-flex'\r\n * Configures the width/height sizing of the element within a layout container\r\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\n */\r\n@Directive({\r\n  selector: '[fx-flex]',\r\n\r\n})\r\nexport class FlexDirective extends BaseStyleDirective implements OnInit, OnChanges,\r\n                                                                 OnMediaQueryChanges, OnDestroy {\r\n  /**\r\n   * MediaQuery Activation Tracker\r\n   */\r\n  private _mqActivation: MediaQueryActivation;\r\n\r\n\r\n  private _layout = 'row';  // default flex-direction\r\n  private _layoutWatcher: Subscription;\r\n\r\n  @Input('fx-flex') flex: string = '';\r\n  @Input('fx-shrink') shrink: number = 1;\r\n  @Input('fx-grow') grow: number = 1;\r\n\r\n  // *******************************************************\r\n  // Optional input variations to support mediaQuery triggers\r\n  // *******************************************************\r\n\r\n  @Input('fx-flex.xs') flexXs;\r\n  @Input('fx-flex.gt-xs') flexGtXs;\r\n  @Input('fx-flex.sm') flexSm;\r\n  @Input('fx-flex.gt-sm') flexGtSm;\r\n  @Input('fx-flex.md') flexMd;\r\n  @Input('fx-flex.gt-md') flexGtMd;\r\n  @Input('fx-flex.lg') flexLg;\r\n  @Input('fx-flex.gt-lg') flexGtLg;\r\n  @Input('fx-flex.xl') flexXl;\r\n\r\n  /**\r\n   * Note: the optional `layout=\"column|row\"` directive must be PARENT container.\r\n   *\r\n   * <div layout=\"row\">\r\n   *    <div flex=\"25%\" layout=\"column\">\r\n   *      ...\r\n   *    </div>\r\n   * </div>\r\n   */\r\n  constructor(\r\n      private _mqa: MediaQueryAdapter, @Optional() @SkipSelf() private _container: LayoutDirective,\r\n      @Optional() @SkipSelf() private _wrap: LayoutWrapDirective, elRef: ElementRef,\r\n      renderer: Renderer) {\r\n    super(elRef, renderer);\r\n\r\n    if (_container) {\r\n      this._layoutWatcher =\r\n          _container\r\n              .onLayoutChange  // Subscribe to layout immediate parent direction changes\r\n              .subscribe(this._onLayoutChange.bind(this));\r\n    }\r\n  }\r\n\r\n  // *********************************************\r\n  // Lifecycle Methods\r\n  // *********************************************\r\n\r\n  /**\r\n   * For @Input changes on the current mq activation property, delegate to the onLayoutChange()\r\n   */\r\n  ngOnChanges(changes?: SimpleChanges) {\r\n    let activated = this._mqActivation;\r\n    let activationChange = activated && isDefined(changes[activated.activatedInputKey]);\r\n\r\n    if (isDefined(changes['flex']) || activationChange) {\r\n      this._onLayoutChange(this._layout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After the initial onChanges, build an mqActivation object that bridges\r\n   * mql change events to onMediaQueryChange handlers\r\n   */\r\n  ngOnInit() {\r\n    this._mqActivation = this._mqa.attach(this, 'flex', '');\r\n    this._onLayoutChange();\r\n  }\r\n\r\n  /**\r\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\r\n   */\r\n  onMediaQueryChanges(changes: MediaQueryChanges) {\r\n    this._updateWithValue(changes.current.value);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._layoutWatcher) {\r\n      this._layoutWatcher.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // *********************************************\r\n  // Protected methods\r\n  // ***************************************s******\r\n\r\n  /**\r\n   * Cache the parent container 'flex-direction' and update the 'fx-flex' styles\r\n   */\r\n  _onLayoutChange(direction?: string) {\r\n    this._layout = direction || this._layout;\r\n\r\n    let value = this.flex || '';\r\n    if (isDefined(this._mqActivation)) {\r\n      value = this._mqActivation.activatedInput;\r\n    }\r\n\r\n    this._updateWithValue(value);\r\n  }\r\n\r\n  _updateWithValue(value: string) {\r\n    this._updateStyle(this._validateValue(this.grow, this.shrink, value));\r\n  }\r\n\r\n  /**\r\n   * Validate the value to be one of the acceptable value options\r\n   * Use default fallback of \"row\"\r\n   */\r\n  _validateValue(grow, shrink, basis) {\r\n    let css, direction = (this._layout === 'column') || (this._layout == 'column-reverse') ?\r\n        'column' :\r\n        'row';\r\n\r\n    /*\r\n     * flex-basis allows you to specify the initial/starting main-axis size of the element,\r\n     * before anything else is computed. It can either be a percentage or an absolute value.\r\n     * It is, however, not the breaking point for flex-grow/shrink properties\r\n     *\r\n     * flex-grow can be seen as this:\r\n     *   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\r\n     *   1: (Default value). Stretch; will be the same size to all other flex items on\r\n     *       the same row since they have a default value of 1.\r\n     *   ≥2 (integer n): Stretch. Will be n times the size of other elements\r\n     *      with 'flex-grow: 1' on the same row.\r\n     *\r\n     */\r\n    let clearStyles = {\r\n      'max-width': null,  // ! use `null` to remove styles\r\n      'max-height': null,\r\n      'min-width': null,\r\n      'min-height': null\r\n    };\r\n    switch (basis || '') {\r\n      case '':\r\n        css = Object.assign(clearStyles, {'flex': '1'});\r\n        break;\r\n      case GROW:\r\n        css = Object.assign(clearStyles, {'flex': '1 1 100%'});\r\n        break;\r\n      case INITIAL:\r\n        css = Object.assign(clearStyles, {'flex': '0 1 auto'});\r\n        break;  // default\r\n      case AUTO:\r\n        css = Object.assign(clearStyles, {'flex': '1 1 auto'});\r\n        break;\r\n      case NONE:\r\n        css = Object.assign(clearStyles, {'flex': '0 0 auto'});\r\n        break;\r\n      case NO_GROW:\r\n        css = Object.assign(clearStyles, {'flex': '0 1 auto'});\r\n        break;\r\n      case NO_SHRINK:\r\n        css = Object.assign(clearStyles, {'flex': '1 0 auto'});\r\n        break;\r\n\r\n      default:\r\n        let isPercent = String(basis).indexOf('%') > -1;\r\n        let isPx = String(basis).indexOf('px') > -1;\r\n\r\n        // Defaults to percentage sizing unless `px` is explicitly set\r\n        if (!isPx && !isPercent && !isNaN(basis))\r\n          basis = basis + '%';\r\n        if (basis === '0px')\r\n          basis = '0%';\r\n\r\n        // Set max-width = basis if using layout-wrap\r\n        // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\r\n\r\n        css = Object.assign(clearStyles, {\r\n          'flex': `${grow} ${shrink} ${(isPx || this._wrap) ? basis : '100%'\r\n                                                                      }`,  // fix issue #5345\r\n        });\r\n        break;\r\n    }\r\n\r\n    let max = (direction === 'row') ? 'max-width' : 'max-height';\r\n    let min = (direction === 'row') ? 'min-width' : 'min-height';\r\n\r\n    css[min] = (basis == '0%') ? 0 : null;\r\n    css[max] = (basis == '0%') ? 0 : basis;\r\n\r\n\r\n    return Object.assign(css, {'box-sizing': 'border-box'});\r\n  }\r\n}\r\n\r\n/**\r\n * 'flex-order' flexbox styling directive\r\n * Configures the positional ordering of the element in a sorted layout container\r\n * @see https://css-tricks.com/almanac/properties/o/order/\r\n */\r\n@Directive({selector: '[fx-flex-order]'})\r\nexport class FlexOrderDirective extends BaseStyleDirective implements OnInit, OnChanges,\r\n                                                                      OnMediaQueryChanges {\r\n  /**\r\n   * MediaQuery Activation Tracker\r\n   */\r\n  private _mqActivation: MediaQueryActivation;\r\n\r\n  @Input('fx-flex-order') order;\r\n\r\n  // *******************************************************\r\n  // Optional input variations to support mediaQuery triggers\r\n  // *******************************************************\r\n\r\n  @Input('fx-flex-order.xs') orderXs;\r\n  @Input('fx-flex-order.gt-xs') orderGtXs;\r\n  @Input('fx-flex-order.sm') orderSm;\r\n  @Input('fx-flex-order.gt-sm') orderGtSm;\r\n  @Input('fx-flex-order.md') orderMd;\r\n  @Input('fx-flex-order.gt-md') orderGtMd;\r\n  @Input('fx-flex-order.lg') orderLg;\r\n  @Input('fx-flex-order.gt-lg') orderGtLg;\r\n  @Input('fx-flex-order.xl') orderXl;\r\n\r\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\r\n    super(elRef, renderer);\r\n  }\r\n\r\n  // *********************************************\r\n  // Lifecycle Methods\r\n  // *********************************************\r\n\r\n  /**\r\n   * For @Input changes on the current mq activation property, delegate to the onLayoutChange()\r\n   */\r\n  ngOnChanges(changes?: SimpleChanges) {\r\n    let activated = this._mqActivation;\r\n    let activationChange = activated && isDefined(changes[activated.activatedInputKey]);\r\n\r\n    if (isDefined(changes['order']) || activationChange) {\r\n      this._updateWithValue();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After the initial onChanges, build an mqActivation object that bridges\r\n   * mql change events to onMediaQueryChange handlers\r\n   */\r\n  ngOnInit() {\r\n    this._mqActivation = this._mqa.attach(this, 'order', '1');\r\n    this._updateWithValue();\r\n  }\r\n\r\n  /**\r\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\r\n   */\r\n  onMediaQueryChanges(changes: MediaQueryChanges) {\r\n    this._updateWithValue(changes.current.value);\r\n  }\r\n\r\n  // *********************************************\r\n  // Protected methods\r\n  // *********************************************\r\n\r\n  _updateWithValue(value?: string) {\r\n    value = value || this.order || '1';\r\n    if (isDefined(this._mqActivation)) {\r\n      value = this._mqActivation.activatedInput;\r\n    }\r\n\r\n    this._updateStyle(this._buildCSS(value));\r\n  }\r\n\r\n\r\n  _buildCSS(value) {\r\n    value = parseInt(value, 10);\r\n    return {order: isNaN(value) ? 0 : value};\r\n  }\r\n}\r\n\r\n/**\r\n * 'flex-offset' flexbox styling directive\r\n * Configures the 'margin-left' of the element in a layout container\r\n */\r\n@Directive({selector: '[fx-flex-offset]'})\r\nexport class FlexOffsetDirective extends BaseStyleDirective implements OnInit, OnChanges,\r\n                                                                       OnMediaQueryChanges {\r\n  /**\r\n   * MediaQuery Activation Tracker\r\n   */\r\n  private _mqActivation: MediaQueryActivation;\r\n\r\n  @Input('fx-flex-offset') offset: string|number;\r\n\r\n  // *******************************************************\r\n  // Optional input variations to support mediaQuery triggers\r\n  // *******************************************************\r\n\r\n  @Input('fx-flex-offset.xs') offsetXs: string|number;\r\n  @Input('fx-flex-offset.gt-xs') offsetGtXs: string|number;\r\n  @Input('fx-flex-offset.sm') offsetSm: string|number;\r\n  @Input('fx-flex-offset.gt-sm') offsetGtSm: string|number;\r\n  @Input('fx-flex-offset.md') offsetMd: string|number;\r\n  @Input('fx-flex-offset.gt-md') offsetGtMd: string|number;\r\n  @Input('fx-flex-offset.lg') offsetLg: string|number;\r\n  @Input('fx-flex-offset.gt-lg') offsetGtLg: string|number;\r\n  @Input('fx-flex-offset.xl') offsetXl: string|number;\r\n\r\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\r\n    super(elRef, renderer);\r\n  }\r\n\r\n  // *********************************************\r\n  // Lifecycle Methods\r\n  // *********************************************\r\n\r\n  /**\r\n   * For @Input changes on the current mq activation property, delegate to the onLayoutChange()\r\n   */\r\n  ngOnChanges(changes?: SimpleChanges) {\r\n    let activated = this._mqActivation;\r\n    let activationChange = activated && isDefined(changes[activated.activatedInputKey]);\r\n    if (isDefined(changes['offset']) || activationChange) {\r\n      this._updateWithValue();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After the initial onChanges, build an mqActivation object that bridges\r\n   * mql change events to onMediaQueryChange handlers\r\n   */\r\n  ngOnInit() {\r\n    this._mqActivation = this._mqa.attach(this, 'offset', 0);\r\n  }\r\n\r\n  /**\r\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\r\n   */\r\n  onMediaQueryChanges(changes: MediaQueryChanges) {\r\n    this._updateWithValue(changes.current.value);\r\n  }\r\n\r\n\r\n  // *********************************************\r\n  // Protected methods\r\n  // *********************************************\r\n\r\n\r\n  _updateWithValue(value?: string|number) {\r\n    value = value || this.offset || 0;\r\n    if (isDefined(this._mqActivation)) {\r\n      value = this._mqActivation.activatedInput;\r\n    }\r\n\r\n    this._updateStyle(this._buildCSS(value));\r\n  }\r\n\r\n  _buildCSS(offset) {\r\n    let isPercent = String(offset).indexOf('%') > -1;\r\n    let isPx = String(offset).indexOf('px') > -1;\r\n    if (!isPx && !isPercent && !isNaN(offset))\r\n      offset = offset + '%';\r\n\r\n    return {'margin-left': `${offset}`};\r\n  }\r\n}\r\n\r\n/**\r\n * 'flex-align' flexbox styling directive\r\n * Allows element-specific overrides for cross-axis alignments in a layout container\r\n * @see https://css-tricks.com/almanac/properties/a/align-self/\r\n */\r\n@Directive({selector: '[fx-flex-align]'})\r\nexport class FlexAlignDirective extends BaseStyleDirective implements OnInit, OnChanges,\r\n                                                                      OnMediaQueryChanges {\r\n  /**\r\n   * MediaQuery Activation Tracker\r\n   */\r\n  private _mqActivation: MediaQueryActivation;\r\n\r\n  @Input('fx-flex-align') align: string = 'stretch';  // default\r\n\r\n  // *******************************************************\r\n  // Optional input variations to support mediaQuery triggers\r\n  // *******************************************************\r\n\r\n  @Input('fx-flex-align.xs') alignXs;\r\n  @Input('fx-flex-align.gt-xs') alignGtXs;\r\n  @Input('fx-flex-align.sm') alignSm;\r\n  @Input('fx-flex-align.gt-sm') alignGtSm;\r\n  @Input('fx-flex-align.md') alignMd;\r\n  @Input('fx-flex-align.gt-md') alignGtMd;\r\n  @Input('fx-flex-align.lg') alignLg;\r\n  @Input('fx-flex-align.gt-lg') alignGtLg;\r\n  @Input('fx-flex-align.xl') alignXl;\r\n\r\n\r\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\r\n    super(elRef, renderer);\r\n  }\r\n\r\n\r\n  // *********************************************\r\n  // Lifecycle Methods\r\n  // *********************************************\r\n\r\n  /**\r\n   * For @Input changes on the current mq activation property, delegate to the onLayoutChange()\r\n   */\r\n  ngOnChanges(changes?: SimpleChanges) {\r\n    let activated = this._mqActivation;\r\n    let activationChange = activated && isDefined(changes[activated.activatedInputKey]);\r\n    if (isDefined(changes['align']) || activationChange) {\r\n      this._updateWithValue();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After the initial onChanges, build an mqActivation object that bridges\r\n   * mql change events to onMediaQueryChange handlers\r\n   */\r\n  ngOnInit() {\r\n    this._mqActivation = this._mqa.attach(this, 'align', 'stretch');\r\n    this._updateWithValue();\r\n  }\r\n\r\n  /**\r\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\r\n   */\r\n  onMediaQueryChanges(changes: MediaQueryChanges) {\r\n    this._updateWithValue(changes.current.value);\r\n  }\r\n\r\n  // *********************************************\r\n  // Protected methods\r\n  // *********************************************\r\n\r\n  _updateWithValue(value?: string|number) {\r\n    value = value || this.align || 'stretch';\r\n    if (isDefined(this._mqActivation)) {\r\n      value = this._mqActivation.activatedInput;\r\n    }\r\n\r\n    this._updateStyle(this._buildCSS(value));\r\n  }\r\n\r\n  _buildCSS(align) {\r\n    let css = {};\r\n\r\n    // Cross-axis\r\n    switch (align) {\r\n      case 'start':\r\n        css['align-self'] = 'flex-start';\r\n        break;\r\n      case 'baseline':\r\n        css['align-self'] = 'baseline';\r\n        break;\r\n      case 'center':\r\n        css['align-self'] = 'center';\r\n        break;\r\n      case 'end':\r\n        css['align-self'] = 'flex-end';\r\n        break;\r\n      default:\r\n        css['align-self'] = 'stretch';\r\n        break;  // default\r\n    }\r\n\r\n    return css;\r\n  }\r\n}\r\n\r\n/**\r\n * 'fx-flex-fill' flexbox styling directive\r\n *  Maximizes width and height of element in a layout container\r\n *\r\n *  NOTE: [fx-flexFill] is NOT responsive fx-flex\r\n */\r\n@Directive({selector: '[fx-flex-fill]'})\r\nexport class FlexFillDirective extends BaseStyleDirective {\r\n  constructor(public elRef: ElementRef, public renderer: Renderer) {\r\n    super(elRef, renderer);\r\n    this._updateStyle(this._buildCSS());\r\n  }\r\n\r\n  _buildCSS() {\r\n    return {\r\n      'margin': 0,\r\n      'width': '100%',\r\n      'height': '100%',\r\n      'min-width': '100%',\r\n      'min-height': '100%'\r\n    };\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************\r\n// Private static variables\r\n// ************************************************************\r\n\r\nconst GROW = 'grow';\r\nconst INITIAL = 'initial';\r\nconst AUTO = 'auto';\r\nconst NONE = 'none';\r\nconst NO_GROW = 'nogrow';\r\nconst NO_SHRINK = 'noshrink';\r\n"]}